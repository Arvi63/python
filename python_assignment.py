# -*- coding: utf-8 -*-
"""python_assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XXuiH88uVrYWl7fkdJOV-1HlRq89Qiua

1.​ Write a Python program to count the number of characters (characterfrequency) in a string. 

Sample String : google.com'

Expected Result : {'o': 3, 'g': 2, '.': 1, 'e': 1, 'l': 1, 'm': 1, 'c': 1}
"""

def count_char(props):
    if type(props) == str:
        count_dict = {}
        for char in props:
            if char in count_dict.keys():
                count_dict[char] += 1
            else:
                count_dict[char] = 1

        return count_dict
    else:
        return "Please send string"


print(count_char('google.com'))

"""2.Write a Python program to get a string made of the first 2 and the last 2 charsfrom a given a string. If the string length is less than 2, return instead of theempty string."""

def two_string(props):
  if len(props) < 2:
    return ''
  else:
    result = props[:2] + props[-2:]
    return result

print(two_string('Python'))

"""3. Write a Python program to get a string from a given string where alloccurrences of its first char have been changed to '$', except the first char itself."""

def func(props):
  first_char = props[0]
  result_str = ''
  result_str += first_char

  for i in props[1:]:
    if i == first_char:
      result_str += '$'
    else:
      result_str += i
    
  return result_str


print(func('restart'))

"""4.​ Write a Python program to get a single string from two given strings, separatedby a space and swap the first two characters of each string."""

def addSwap(props1,props2):
  temp1 = props1[:2]
  temp2 = props2[:2]
  temp2 += props1[2:]
  temp1 += props2[2:]

  result = temp2 + ' ' + temp1
  return result

print(addSwap('abc','xyz'))

"""5. Write a Python program to add 'ing' at the end of a given string (length should
be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the
string length of the given string is less than 3, leave it unchanged.
"""

def str_add(props):
  if len(props) >= 3:
    if props.endswith('ing'):
      props += 'ly'
    else:
      props += 'ing'
      
  return props


print(str_add('string'))

"""6. Write a Python program to find the first appearance of the substring 'not' and
'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor'
substring with 'good'. Return the resulting string.
"""

def find_str(props):
  if 'not' in props and 'poor' in props:
    splitted = props.split(' ')
    for i,word in enumerate(splitted):
      if word == 'not':
        not_index = i
      elif word == 'poor':
        poor_index = i
    if poor_index > not_index:
      del splitted[not_index:]
      splitted.append('good')

    result = ' '.join(splitted)
    return result

  return props

print(find_str('The lyrics is not that  poor !'))

"""7. Write a Python function that takes a list of words and returns the length of the
longest one.
"""

def longest(props):
  max_length = 0
  for word in props:
    if len(word) > max_length:
      max_length = len(word)
  return max_length

print(longest('The lyrics is not that  poor'.split(' ')))

"""8. Write a Python program to remove the nth index character from a nonempty
string.
"""

def remove_nth(string,index):
  if len(string.strip()) != 0:
    result = string[:index] + string[index+1:]
    return result
  return string

print(remove_nth('Netherland',7))

"""9. Write a Python program to change a given string to a new string where the first
and last chars have been exchanged.
"""

def change(props):
  first = props[0]
  last = props[-1]
  result = last + props[1:-1] + first
  return result

print(change("Hello world"))

"""1 0. Write a Python program to remove the characters which have odd index
values of a given string
"""

def remove_odd(props):
  temp = ''
  for i,letter in enumerate(props):
    if i % 2 == 0:
      temp += props[i]
  return temp

print(remove_odd('helloworld'))

"""1 1 . Write a Python program to count the occurrences of each word in a given
sentence.
"""

def count_occ(props):
  count = {}
  splitted = props.split(' ')
  for word in splitted:
    if word in count:
      count[word] += 1
    else:
      count[word] = 1
  return count

print(count_occ("Hello I everyone. Again hello to everyone. I am suraj. I am just checking this function"))

"""1 2. Write a Python script that takes input from the user and displays that input
back in upper and lower cases
"""

def upper_lower():
  input_data = input("Enter your query: ")
  print("UpperCase input: ",input_data.upper())
  print("LowerCase input: ",input_data.lower())
  
upper_lower()

"""1 3. Write a Python program that accepts a comma separated sequence of words
as input and prints the unique words in sorted form (alphanumerically)
"""

def unique_sort(props):
  splitted = props.split(',')
  splitted = [words.strip() for words in splitted]
  unique_word = set(splitted)
  unique_word_sort = sorted(unique_word)
  return unique_word_sort

print(unique_sort('red, white, black, red, green, black'))

"""1 4. Write a Python function to create the HTML string with tags around the
word(s)
"""

def add_tags(tag,string):
  return '<' + tag + '>' + string + '</' + tag + '>'

print(add_tags('i', 'Python'))
print(add_tags('b', 'Python Tutorial'))

"""1 5. Write a Python function to insert a string in the middle of a string."""

def insert_string_middle(loc,string):
  if len(loc) % 2 ==0:
    ind = int(len(loc)/2)
    string = loc[:ind] + string + loc[ind:] 
    return string

print(insert_string_middle('{{}}', 'PHP') )
print(insert_string_middle('[[]]', 'Python') )
print(insert_string_middle('<<<>>>', 'Python') )

"""1 6. Write a Python program to sum all the items in a list."""

def add(props):
  sum = 0
  for num in props:
    sum += num
  return sum

print(add([1,2,3,4,5]))

"""1 7. Write a Python program to multiplies all the items in a list"""

def multiply(props):
  mul = props[0]
  for num in props[1:]:
    mul *= num
  return mul

print(multiply([1,2,3,4,5]))

"""1 8. Write a Python program to get the largest number from a list"""

def largest(props):
  max = 0
  for num in props:
    if num > max:
      max = num
  return max

print(largest([1,2,3,4,5,5,6,7,8]))

"""1 9. Write a Python program to get the smallest number from a list"""

def smallest(props):
  min = 0
  for num in props:
    if num < min:
      min = num
  return min

print(smallest([1,2,3,-1,-9]))

"""20. Write a Python program to count the number of strings where the string
length is 2 or more and the first and last character are same from a given list of
strings
"""

def count_str(props):
  count = 0
  for string in props:
    if len(string) >= 2:
      if(string[0] == string[-1]):
        count += 1
  
  return count

print(count_str( ['abc', 'xyz', 'aba', '1221']))

"""21 . Write a Python program to get a list, sorted in increasing order by the last
element in each tuple from a given list of non-empty tuples
"""

def sort_tuple(props):
  props.sort(key = lambda x: x[1])
  return props
print(sort_tuple([(2, 5), (1 , 2), (4, 4), (2, 3), (2, 1 )]))

"""22. Write a Python program to remove duplicates from a list."""

def remove_dup(props):
  new_list = []
  for num in props:
    if num not in new_list:
      new_list.append(num)
  
  return new_list

print(remove_dup([1,2,3,4,5,2,3,4,6,7,7,8]))

"""23. Write a Python program to check a list is empty or not"""

def check_empty(props):
  if len(props) == 0:
    return "Empty"
  return "Not empty"

print(check_empty([]))

"""24. Write a Python program to clone or copy a list."""

def copy_list(props):
  copied_list = []
  for item in props:
    copied_list.append(item)
  return copied_list

print(copy_list([1,2,3,4]))

"""25. Write a Python program to check whether all dictionaries in a list are empty or
not
"""

def check_dict(props):
  empty = True
  for item in props:
    if(len(item) != 0):
      empty = False
  
  return empty

print(check_dict([{1 ,2},{},{}]))
print(check_dict([{},{},{}]))

"""26. Write a Python program to insert a given string at the beginning of all items in
a list.
"""

def insert_string(item_list,string):
  for i,item in enumerate(item_list):
    item_list[i] = string + str(item)

  return item_list

print(insert_string([1,2,3,4],'emp'))

"""27. Write a Python program to replace the last element in a list with another list"""

def replace_join(list1,list2):
  result = list1[:-1] + list2
  return result

print(replace_join( [1 , 3, 5, 7, 9, 10], [2, 4, 6, 8]))

"""28. Write a Python script to add a key to a dictionary."""

def add_key(props):
  a = list(props.keys())[-1] + 1
  b = list(props.values())[-1] + 10
  props[a] = b
  return props


print(add_key( {0: 10, 1 : 20}))

"""29. Write a Python script to concatenate following dictionaries to create a new
one
"""

def concat_dict(dic1,dic2,dic3):
  result  = {**dic1,**dic2,**dic3}
  return result

print(concat_dict({1:10, 2:20},{3:30, 4:40},{5:50,6:60}))

"""30. Write a Python script to check whether a given key already exists in a
dictionary.
"""

def check_key(dic,key):
  if key in dic:
    return True
  return False

print(check_key({1 : 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60},5))

"""31 . Write a Python program to iterate over dictionaries using for loops."""

def iterate_dic(dic):
  for k,v in dic.items():
    print(f"The key is: {k} and value is: {v}")

iterate_dic({1 : 10, 2: 20, 3: 30, 4: 40, 5: 50})

"""32. Write a Python script to generate and print a dictionary that contains a
number (between 1 and n) in the form (x, x*x).
"""

def generate_dic(n):
  result = {}
  for i in range(1,n+1):
    result[i] = i*i
  return result

print(generate_dic(5))

"""33. Write a Python script to print a dictionary where the keys are numbers
between 1 and 1 5 (both included) and the values are square of keys
"""

def dict_square(first,last):
  result = {}
  for i in  range(first,last+1):
    result[i] = i**2
  return result

print(dict_square(1,15))

"""34. Write a Python script to merge two Python dictionaries."""

def merge(dic1,dic2):
  dic1.update(dic2)
  return dic1

print(merge({1 :10, 2:20},{1 :15, 3:24,4:26}))

"""35. Write a Python program to iterate over dictionaries using for loops"""

def iterate(dic):
  for key,value in dic.items():
    print(f"Key: {key} snd Value: {value}")

iterate({1: 15, 2: 20, 3: 24, 4: 26})

"""36. Write a Python program to sum all the items in a dictionary"""

def sum_dic(dic):
  sum = 0
  for k,v in dic.items():
    if type(v) == int or type(v) == float:
      sum += v
    else:
      continue
  return sum

print(sum_dic({1: 15.0, 2: 20, 3: 24, 4: 26}))

"""37. Write a Python program to multiply all the items in a dictionary"""

def mul_dic(dic):
  mul = 1
  for k,v in dic.items():
    if type(v) == int or type(v) == float:
      mul *= v
    else:
      continue
  return mul

print(mul_dic({1: 15.0, 2: 20, 3: 24, 4: 26}))

"""38. Write a Python program to remove a key from a dictionary"""

def remove_key(dic,key):
  if key in dic:
    del dic[key]
    return dic
  return "Key is not present"

print(remove_key({1: 15.0, 2: 20, 3: 24, 4: 26},3))

"""39. Write a Python program to unpack a tuple in several variables."""

def tup_unpack(props):
  var1,var2 = props
  print("First Var: ",var1)
  print("Second Var: ",var2)

tup_unpack(("hello",'world'))

"""40. Write a Python program to add an item in a tuple."""

def add_tup(tup, item):
  tup += (item,)
  return tup

print(add_tup((1,2,3,4),5))

"""41 . Write a Python program to convert a tuple to a string."""

def tup_string(tup):
  result = ''.join(tup)
  print(result)

tup = ('a','b','c','d')
tup_string(tup)

"""42. Write a Python program to convert a list to a tuple"""

def li_tup(l):
  return tuple(l)

l = [1,2,3,4]
print(li_tup(l))

"""43. Write a Python program to remove an item from a tuple."""

def tup_remove(tup,item):
  tup = list(tup)
  tup.remove(item)
  tup = tuple(tup)
  return tup

tup =  ('a','b','c','d','e')
print(tup_remove(tup,'d'))

"""44. Write a Python program to slice a tuple."""

def slice_tup(tup,start,end):
  return tup[start:end]

tup = [1,2,3,4,5]
print(slice_tup(tup,2,4))

"""45. Write a Python program to find the index of an item of a tuple"""

def tup_index(tup,item):
  return tup.index(item)

tup =  ('a','b','c','d','e')
print(tup_index(tup,'c'))

"""46. Write a Python program to find the length of a tuple"""

def tup_len(tup):
  return len(tup)

tup = [1,2,3,4,5]
print(tup_len(tup))

"""#Functions

1 . Write a Python function to find the Max of three numbers
"""

def max_three(num1,num2,num3):
  if num1 > num2 and num1 > num3:
    return num1
  elif(num2 > num1 and num2 > num3):
    return num2
  else:
    return num3

result = max_three(18,45,32)
print(f"The maximum number is : {result}")

"""2. Write a Python function to sum all the numbers in a list"""

def sum_list(props):
  sum = 0
  for i in props:
    sum += i
  return sum
print(sum_list([8, 2, 3, 0, 7]))

"""3. Write a Python function to multiply all the numbers in a list"""

def mul_list(props):
  mul = 1
  for i in props:
    mul *= i
  return mul
print(mul_list([8, 2, 3, -1 , 7]))

"""4. Write a Python program to reverse a string."""

def rev_str(string):
  rev_str = ''
  index = len(string)
  while index:
    rev_str += string[index -1 ]
    index -= 1
  return rev_str

print(rev_str("1234abcd"))

"""5. Write a Python function to calculate the factorial of a number (a non-negative
integer). The function accepts the number as an argument.
"""

def factorial(num):
  num = abs(num)
  if num == 0 or num == 1:
    return num
  return num * factorial(num-1)

result = factorial(5)
print(f"The factorial is : {result}")

"""6. Write a Python function to check whether a number is in a given range."""

def check(start,end,num):
  if num >= start and num <= end:
    return f"{num} is in range of {start} to {end} "
  return f"{num} is not in range of {start} to {end}"

print(check(1,100,110))

"""7. Write a Python function that accepts a string and calculate the number of
upper case letters and lower case letters
"""

def up_lo(string):
  up_count = 0
  low_count = 0
  for i in string:
    if i.isupper():
      up_count += 1
    elif i.islower():
      low_count += 1
  return (up_count,low_count)

result = up_lo("The quick Brow Fox")
print(f"Uppercase count: {result[0]} and LowerCase Count: {result[1]} ")

"""8. Write a Python function that takes a list and returns a new list with unique
elements of the first list
"""

def unique(elements):
  unique_ele = list(set(elements))
  return unique_ele

print(unique([1 ,2,3,3,3,3,4,5]))

"""9. Write a Python function that takes a number as a parameter and check the
number is prime or not
"""

import math
def prime(num):
  num = abs(num)
  if num == 0 or num == 1:
    return "Not Prime"
  if num == 2:
    return "Prime"
  for i in range(3,math.floor(math.sqrt(num))+1,2):
    if num % i == 0:
      return "Not Prime"
  return "Prime"

print(prime(21))

"""1 0. Write a Python program to print the even numbers from a given list"""

def even(elements):
  even_num = []
  for num in elements:
    if num % 2 == 0:
      # print(f"{num} is a even number")
      even_num.append(num)
  return even_num

print(even( [1 , 2, 3, 4, 5, 6, 7, 8, 9]))

"""1 1 . Write a Python program to create a lambda function that adds 1 5 to a given
number passed in as an argument, also create a lambda function that multiplies
argument x with argument y and print the result
"""

a = lambda x: x + 15
b = lambda x,y: x*y

print("After adding with 15: ",a(10))
print("After multiplying :",b(2,5))

"""1 2. Write a Python program to create a function that takes one argument, and
that argument will be multiplied with an unknown given number
"""

import random
def multiply(num1):
  return random.randint(1,20) * num1

print(multiply(5))

"""1 3. Write a Python program to sort a list of tuples using Lambda"""

sort = lambda tup: sorted(tup,key = lambda x: x[1])

print(sort([(2, 5), (1 , 2), (4, 4), (2, 3), (2, 1 )]))

"""1 4. Write a Python program to sort a list of dictionaries using Lambda"""

sort = lambda dic: sorted(dic,key= lambda x: x['age'])

print(sort([{'name': 'ram', 'age': 40}, {'name': 'shyam', 'age': 20}, {'name': 'hary', 'age': 30}]))

"""1 5. Write a Python program to filter a list of integers using Lambda."""

num_list = [1,2.0,3,4,5.0,6.66,7,8.8,9.99,10]

result  = filter(lambda x: type(x) == int,num_list)
print(list(result))

"""1 6. Write a Python program to square and cube every number in a given list of
integers using Lambda.
"""

def square(seq):
  return (map(lambda x: x**2,seq))

def cube(seq):
  return map(lambda x: x**3,seq)

seq = [0, 1, 2, 3, 5, 8, 13] 
print("Square",list(square(seq)))
print("Cube",list(cube(seq)))

"""1 7. Write a Python program to find if a given string starts with a given character
using Lambda
"""

check = lambda string,first_char: True if string[0] == first_char else False

print(check('Hello world','H'))

"""1 8. Write a Python program to check whether a given string is number or not
using Lambda.
"""

check = lambda props: props.isnumeric()

print(check('123'))

"""1 9. Write a Python program to create Fibonacci series upto n using Lambda"""

def fib(n):
  fib_list = [0,1]
  any(map(lambda _: fib_list.append(sum(fib_list[-2:])), range(2, n)))
  return fib_list[:n] 

print(fib(5))

"""20. Write a Python program to find intersection of two given arrays using
Lambda.
"""

def inter(arr1,arr2):
  result = lambda ar1,ar2: set(ar1).intersection(set(ar2))
  return result(arr1,arr2)

inter([1,2,3,4],[3,4,5])

